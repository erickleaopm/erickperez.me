{"version":3,"sources":["webpack:///./src/components/Project.js","webpack:///./src/components/Projects.js","webpack:///./src/components/Hero.js","webpack:///./src/constants/services.js","webpack:///./src/components/Services.js","webpack:///./src/components/Jobs.js","webpack:///./src/libraries/index.js","webpack:///./src/pages/index.js","webpack:///./src/components/Blog.js","webpack:///./src/components/Blogs.js"],"names":["Project","title","description","stack","url","github","image","index","className","fluid","childImageSharp","map","item","key","id","href","target","rel","Projects","projects","showLink","Title","project","to","Hero","useStaticQuery","file","role","aria-label","icon","text","Services","services","service","Jobs","jobs","allStrapiJobs","nodes","React","useState","value","setvalue","company","position","date","type_of_job","job","strapiId","onClick","match","join","name","query","data","allStrapiProjects","blogs","allStrapiBlogs","Layout","Blogs","Blog","slug","excerpt","categories","featured_image","category","blog"],"mappings":"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","file":"component---src-pages-index-js-6c0be0ddd72a357c27bf.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Image from \"gatsby-image\"\nimport { FaGithubSquare, FaShareSquare } from \"react-icons/fa\"\nconst Project = ({ title, description, stack, url, github, image, index }) => {\n  return (\n    <article className=\"project\">\n      <Image fluid={image.childImageSharp.fluid} className=\"project-img\" />\n      <div className=\"project-info\">\n        <span className=\"project-number\">0{index + 1}.</span>\n        <h3>{title}</h3>\n        <p className=\"project-desc\">{description}</p>\n        <div className=\"project-stack\">\n          {stack.map(item => {\n            return <span key={item.id}>{item.title}</span>\n          })}\n        </div>\n        <div className=\"project-links\">\n          {github !== \"N/A\" && (\n            <a href={github} target=\"_blank\" rel=\"noreferrer\">\n              <FaGithubSquare className=\"project-icon\" />\n            </a>\n          )}\n\n          <a href={url} target=\"_blank\" rel=\"noreferrer\">\n            <FaShareSquare className=\"project-icon\" />\n          </a>\n        </div>\n      </div>\n    </article>\n  )\n}\n\nProject.propTypes = {}\n\nexport default Project\n","import React from \"react\"\nimport Title from \"./Title\"\nimport Project from \"./Project\"\nimport { Link } from \"gatsby\"\nconst Projects = ({ projects, title, showLink }) => {\n  return (\n    <section className=\"section projects\">\n      <Title title={title} />\n      <div className=\"section-center projects-center\">\n        {projects.map((project, index) => {\n          return <Project key={project.id} index={index} {...project} />\n        })}\n      </div>\n      {showLink && (\n        <Link to=\"/projects\" className=\"btn center-btn\">\n          More projects\n        </Link>\n      )}\n    </section>\n  )\n}\n\nexport default Projects\n","import React from \"react\"\nimport Image from \"gatsby-image\"\nimport { Link } from \"gatsby\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport SocialLinks from \"../constants/socialLinks\"\nconst query = graphql`\n  {\n    file(relativePath: { eq: \"avatar.png\" }) {\n      childImageSharp {\n        fluid {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n  }\n`\nconst Hero = () => {\n  const {\n    file: {\n      childImageSharp: { fluid },\n    },\n  } = useStaticQuery(query)\n\n  return (\n    <header className=\"hero\">\n      <div className=\"section-center hero-center\">\n        <article className=\"hero-info\">\n          <div>\n            <div className=\"underline\"></div>\n            <h1>i'm erick p√©rez</h1>\n            <h4>\n              <span role=\"img\" aria-label=\"Developer\">\n                üë®üèΩ‚Äçüíª\n              </span>{\" \"}\n              Web Developer &{\" \"}\n              <span role=\"img\" aria-label=\"Chef\">\n                üë®üèΩ‚Äçüç≥\n              </span>{\" \"}\n              Amateur Chef\n            </h4>\n            <Link to=\"/contact\" className=\"btn\">\n              contact me\n            </Link>\n            <SocialLinks />\n          </div>\n        </article>\n        <Image fluid={fluid} className=\"hero-img\" />\n      </div>\n    </header>\n  )\n}\n\nexport default Hero\n","import React from \"react\"\nimport { FaCode, FaSketch, FaAndroid } from \"react-icons/fa\"\nexport default [\n  {\n    id: 1,\n    icon: <FaCode className=\"service-icon\" />,\n    title: \"web development\",\n    text: `I have more than 5 years creating web apps using PHP and JS. My expertise is creating a really cool user interfaces.`,\n  },\n  {\n    id: 2,\n    icon: <FaSketch className=\"service-icon\" />,\n    title: \"web design\",\n    text: `If you want to update your site or if you want to create a great product or service, I can help you to reach it.`,\n  },\n  {\n    id: 3,\n    icon: <FaAndroid className=\"service-icon\" />,\n    title: \"backend development\",\n    text: `Do you need to persistent your client data? I can help you to create a really secure and functional API Rest.`,\n  },\n]\n","import React from \"react\"\nimport Title from \"./Title\"\nimport services from \"../constants/services\"\nconst Services = () => {\n  return (\n    <section className=\"section bg-grey\">\n      <Title title=\"services\" />\n      <div className=\"section-center services-center\">\n        {services.map(service => {\n          const { id, icon, title, text: description } = service\n          return (\n            <article key={id} className=\"service\">\n              {icon}\n              <h4>{title}</h4>\n              <div className=\"underline\"></div>\n              <p>{description}</p>\n            </article>\n          )\n        })}\n      </div>\n    </section>\n  )\n}\n\nexport default Services\n","import React from \"react\"\nimport Title from \"./Title\"\nimport { FaAngleDoubleRight, FaShareSquare } from \"react-icons/fa\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { Link } from \"gatsby\"\nimport { splitPascalCase } from \"../libraries\"\n\nconst query = graphql`\n  {\n    allStrapiJobs(sort: { fields: strapiId, order: DESC }) {\n      nodes {\n        strapiId\n        company\n        date\n        position\n        type_of_job\n        url\n        description {\n          id\n          name\n        }\n      }\n    }\n  }\n`\n\nconst Jobs = () => {\n  const data = useStaticQuery(query)\n  const {\n    allStrapiJobs: { nodes: jobs },\n  } = data\n  const [value, setvalue] = React.useState(0)\n  const { company, position, date, description, type_of_job, url } = jobs[value]\n\n  return (\n    <section className=\"section jobs\">\n      <Title title=\"Job Experience\" />\n      <div className=\"jobs-center\">\n        {/* Buttons container */}\n        <div className=\"btn-container\">\n          {jobs.map((job, index) => {\n            return (\n              <button\n                key={job.strapiId}\n                className={`job-btn ${index === value && \"active-btn\"}`}\n                onClick={() => setvalue(index)}\n              >\n                {job.company}\n              </button>\n            )\n          })}\n        </div>\n        {/* Job info */}\n        <article className=\"job-info\">\n          <h3>{position}</h3>\n          <h4>\n            <a href={url} target=\"_blank\" rel=\"noreferrer\">\n              {company}\n            </a>\n          </h4>\n          <p className=\"job-date\">\n            {date} <span>({splitPascalCase(type_of_job)})</span>\n          </p>\n          {description.map(item => {\n            return (\n              <div key={item.id} className=\"job-desc\">\n                <FaAngleDoubleRight className=\"job-icon\" />\n                <p>{item.name}</p>\n              </div>\n            )\n          })}\n        </article>\n      </div>\n      <Link to=\"/about\" className=\"btn center-btn\">\n        more info\n      </Link>\n    </section>\n  )\n}\n\nexport default Jobs\n","export const splitPascalCase = word => {\n  return word.match(/($[a-z])|[A-Z][^A-Z]+/g).join(\"-\")\n}\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/Layout\"\nimport Hero from \"../components/Hero\"\nimport Services from \"../components/Services\"\nimport Jobs from \"../components/Jobs\"\nimport Projects from \"../components/Projects\"\nimport Blogs from \"../components/Blogs\"\nexport default ({ data }) => {\n  const {\n    allStrapiProjects: { nodes: projects },\n    allStrapiBlogs: { nodes: blogs },\n  } = data\n\n  return (\n    <Layout>\n      <Hero />\n      <Services />\n      <Jobs />\n      <Projects projects={projects} title=\"Featured Projects\" showLink />\n      <Blogs blogs={blogs} title=\"Latest Articles\" showLink />\n    </Layout>\n  )\n}\n\n// Add github to the query\nexport const query = graphql`\n  {\n    allStrapiProjects(filter: { featured: { eq: true } }) {\n      nodes {\n        id\n        title\n        description\n        url\n        github\n        image {\n          childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        stack {\n          id\n          title\n        }\n      }\n    }\n    allStrapiBlogs(sort: { fields: date, order: DESC }, limit: 3) {\n      nodes {\n        id\n        title\n        slug\n        excerpt\n        date(formatString: \"MMMM Do, YYYY\")\n        categories {\n          id\n          name\n        }\n        featured_image {\n          childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Image from \"gatsby-image\"\nimport { Link } from \"gatsby\"\n\nconst Blog = ({\n  id,\n  title,\n  slug,\n  excerpt,\n  date,\n  categories,\n  featured_image: image,\n}) => {\n  return (\n    <Link to={`/blogs/${slug}`} className=\"blog\" key={id}>\n      <article>\n        <Image fluid={image.childImageSharp.fluid} className=\"blog-img\" />\n        <div className=\"blog-card\">\n          <h4>{title}</h4>\n          <p>{excerpt}</p>\n          <div className=\"blog-footer\">\n            <ul>\n              {categories.map(category => {\n                return (\n                  <li key={category.id}>\n                    <p>{category.name}</p>\n                  </li>\n                )\n              })}\n            </ul>\n            <p>{date}</p>\n          </div>\n        </div>\n      </article>\n    </Link>\n  )\n}\n\nBlog.propTypes = {}\n\nexport default Blog\n","import React from \"react\"\nimport Title from \"./Title\"\nimport Blog from \"./Blog\"\nimport { Link } from \"gatsby\"\n\nexport const Blogs = ({ blogs, title, showLink }) => {\n  return (\n    <section className=\"section\">\n      <Title title={title} />\n      <div className=\"section-center blogs-center\">\n        {blogs.map(blog => {\n          return <Blog key={blog.id} {...blog} />\n        })}\n      </div>\n      {showLink && (\n        <Link to=\"/blog\" className=\"btn center-btn\">\n          More articles\n        </Link>\n      )}\n    </section>\n  )\n}\nexport default Blogs\n"],"sourceRoot":""}